{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "az_func_updates",
  "steps": [
    {
      "file": "src/AzureFunctionsUpdates/Clients/TimerBasedStarter.cs",
      "title": "TimerBasedStarter - Timer",
      "description": "The function is triggered by a timer that goes off every two hours.",
      "line": 12
    },
    {
      "file": "src/AzureFunctionsUpdates/Clients/TimerBasedStarter.cs",
      "title": "TimerBasedStarter - StartNewInstance",
      "description": "A new instance is created of the `ReleaseUpdateOrchestration`.",
      "line": 16
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "title": "ReleaseUpdateOrchestration",
      "description": "The `GetRepositoryConfigurationsActivity` is called which retrieves a list of GitHub repositories that will be processed.",
      "line": 26
    },
    {
      "file": "src/AzureFunctionsUpdates/Models/RepositoryReleases/RepositoryConfiguration.cs",
      "title": "RepositoryConfiguration",
      "description": "The `RepositoryConfiguration` contains the minimum information to retrieve the release status for GitHub repositories related to Azure.",
      "line": 24
    },
    {
      "file": "src/AzureFunctionsUpdates/Activities/RepositoryReleases/GetRepositoryConfigurationsActivity.cs",
      "title": "GetRepositoryConfigurationsActivity -Table input",
      "description": "The `GetRepositoryConfigurationsActivity` function uses a `Table` input binding to query entities from Table storage.",
      "line": 19
    },
    {
      "file": "src/AzureFunctionsUpdates/Activities/RepositoryReleases/GetRepositoryConfigurationsActivity.cs",
      "title": "GetRepositoryConfigurationsActivity - Query",
      "description": "A query is created that will return all the entities in the partition.",
      "line": 26
    },
    {
      "file": "src/AzureFunctionsUpdates/Activities/RepositoryReleases/GetRepositoryConfigurationsActivity.cs",
      "description": "The query is executed and only the `RepositoryConfigurations` marked as `IsActive` are added to the output.",
      "line": 30
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "title": "ReleaseUpdateOrchestration function",
      "description": "If any `RepositoryConfiguration` items are found the orchestration continues.",
      "line": 28
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "description": "The `GetRepositoryReleasesTasks` method is used to define the tasks to retrieve GitHub release information from both GitHub and our own data store.",
      "line": 30,
      "selection": {
        "start": {
          "line": 30,
          "character": 37
        },
        "end": {
          "line": 30,
          "character": 63
        }
      }
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "description": "Two lists are initialized to contain the tasks that will call the activities to get releases from GitHub and from our History table.",
      "line": 106
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "description": "While iterating over the available `RepositoryConfigurations` tasks are created to call `GetLatestReleaseFromGitHubActivity` and `GetLatestReleaseFromHistoryActivity`.",
      "line": 124,
      "selection": {
        "start": {
          "line": 119,
          "character": 28
        },
        "end": {
          "line": 119,
          "character": 63
        }
      }
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "description": "The activity calls are fanned-out so they are processed in parallel as much as possible. Once all tasks have been completed the orchestration continues.",
      "line": 32
    },
    {
      "file": "src/AzureFunctionsUpdates/Orchestrations/ReleaseUpdateOrchestration.cs",
      "description": "The release information from GitHub and the History need to be matched up so we're comparing the right repository data.",
      "line": 34
    },
    {
      "file": "src/AzureFunctionsUpdates/Builders/ReleaseFunctionBuilder.cs",
      "description": "Releases are being matched based on the `RepositoryName`.",
      "line": 11
    }
  ]
}